{"version":3,"sources":["logo.svg","store/session.js","components/searchBar/index.js","components/results/index.js","App.js","store/index.js","index.js"],"names":["octokit","process","TOKEN","Octokit","auth","GET_INITIAL","GET_BY_SEARCH","getInitial","data","type","payload","SearchBar","dispatch","useDispatch","useState","searchType","setSearchType","searchTerm","setSearchTerm","changeSearch","id","onSubmit","e","preventDefault","a","arr","console","log","includes","request","email","term","split","query","join","fetch","json","items","forEach","item","login","find","profile","push","message","Error","setTimeout","searchContent","name","checked","onChange","placeholder","target","value","Results","className","src","avatar_url","location","public_repos","created_at","slice","updated_at","App","enhancer","useEffect","results","useSelector","state","map","result","rootReducer","combineReducers","action","applyMiddleware","thunk","configureStore","preloadedState","createStore","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.686ae008.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Octokit } from \"@octokit/core\";\n\nconst GITTOKEN = process.env.TOKEN\n\nconst octokit = new Octokit({\n    auth: 'a5fc812d94a3a4d98a4903ff2b585c8f0a5e8361',\n    // baseUrl: 'https://api.github.com/',\n});\n\n// Constants\n\nconst GET_INITIAL = 'session/GET_INITIAL'\nconst GET_BY_SEARCH = 'session/GET_BY_SEARCH'\n\n// Action Creator\n\nconst getInitial = (data) => ({\n    type: GET_INITIAL,\n    payload: data\n})\n\nconst getBySearch = (data) => ({\n    type: GET_BY_SEARCH,\n    payload: data\n})\n\n\n// Thunks\n\nexport const initialContent = () => async(dispatch) => {\n    const { data } = await octokit.request(\"GET /users\")\n    // const result = await request.json()\n\n    dispatch(getInitial(data))\n    return data\n    // if(request.ok) {\n    //     dispatch(getInitial(request))\n    //     return request\n    // }\n}\n\nexport const searchContent = (searchTerm) => async(dispatch) => {\n    let request;\n    let arr = []\n\n    // Part One: Find User's Login Based on SearchTerm\n    console.log('@@@@@@@@', searchTerm)\n    if(searchTerm.includes('@')){\n        request = await octokit.request(\"GET /users\", {\n            email: `${searchTerm}`\n        })\n    } else {\n        const term = searchTerm.split()\n        const query = term.join('+')\n        request = await fetch(`https://api.github.com/search/users?q=${query}`)\n    }\n\n    const result = await request.json()\n\n    // Part Two: Use User's Login to Find User's Profile Info\n    result.items.forEach( async(item) => {\n        const find = await fetch(`https://api.github.com/users/${item.login}`)\n        const profile = await find.json()\n        arr.push(profile)\n    });\n\n    if(request.message) {\n        throw new Error(request.message)\n    }\n\n    setTimeout(() => {\n        dispatch(getBySearch(arr))\n    }, 1000);\n    return arr\n\n}\n\n// Reducer\n\nexport default function reducer(state = [], action) {\n    switch(action.type) {\n        case GET_INITIAL:\n            return [...action.payload]\n        case GET_BY_SEARCH:\n            return [...action.payload]\n        default:\n            return state\n    }\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { searchContent } from '../../store/session'\nimport './searchbar.css'\n\nconst SearchBar = () => {\n\n    const dispatch = useDispatch()\n    const [searchType, setSearchType] = useState(false)\n    const [searchTerm, setSearchTerm] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(searchContent(searchTerm))\n    }\n\n    const changeSearch = () => {\n        setSearchType(!searchType)\n    }\n\n    return (\n        <div id=\"searchbar\">\n            <form onSubmit={handleSubmit}>\n                <div id=\"search-type\">\n                    Search by:\n                    <label>\n                        <input type=\"radio\" id=\"name\" name=\"name\" checked={!searchType}\n                        onChange={changeSearch}>\n                        </input>\n                        Name\n                    </label>\n                    <label>\n                        <input type=\"radio\" id=\"email\" name=\"email\" checked={searchType}\n                        onChange={changeSearch}>\n                        </input>\n                        Email\n                    </label>\n                </div>\n                <div id=\"search-field\">\n                {!searchType ?\n                    <label>\n                        <input type=\"text\" placeholder=\"Real Name\"\n                            onChange={e => setSearchTerm(e.target.value)}></input>\n                    </label>:\n                    <label>\n                        <input type=\"email\" placeholder=\"Email\"\n                            onChange={e => setSearchTerm(e.target.value)}></input>\n                    </label>}\n                </div>\n                <button type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React, { useEffect } from 'react'\nimport './results.css'\n\nconst Results = ({ profile }) => {\n\n    return (\n        <section className=\"profile\">\n            <div className=\"left\">\n                <img src={profile.avatar_url} />\n            </div>\n            <div className=\"right\">\n                <h4>{profile.name}</h4>\n                <h5><ion-icon name=\"logo-github\"></ion-icon> {profile.login}</h5>\n                <p><span className=\"profile-label\"><ion-icon name=\"home-outline\">\n                    </ion-icon></span> {profile.location ? <span>{profile.location}</span>\n                    : <span className=\"no-info\">No Location Listed</span>}</p>\n                <p><span className=\"profile-label\"><ion-icon name=\"mail-outline\">\n                    </ion-icon></span> {profile.email ? <span>{profile.email}</span>\n                    : <span className=\"no-info\">No Email Listed</span>}</p>\n                <p><span className=\"profile-label\"><ion-icon name=\"document-text-outline\"></ion-icon></span> {profile.public_repos}</p>\n                <p><span className=\"profile-label\"><ion-icon name=\"person-add-outline\"></ion-icon></span> {profile.created_at.slice(0,10)}</p>\n                <p><span className=\"profile-label\"><ion-icon name=\"pulse-outline\"></ion-icon></span> {profile.updated_at.slice(0,10)}</p>\n            </div>\n        </section>\n    )\n}\n\nexport default Results\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport logo from './logo.svg';\nimport SearchBar from './components/searchBar';\nimport Results from './components/results'\nimport { initialContent } from './store/session'\nimport './App.css';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initialContent())\n  }, [])\n\n  const results = useSelector(state => state.results)\n\n  return (\n    <div className=\"App\">\n      <main className=\"content\">\n        <div id=\"greeting\">\n          <h1>Git the Right Guy</h1>\n          <h2>Human Resource Portal for Github Applicants</h2>\n          <SearchBar />\n        </div>\n        <div id=\"search-results\">\n          <h3>Results</h3>\n          {results.map(result => {\n            return <Results profile={result} key={result.id}/>\n          })}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport session from \"./session\"\n\nconst rootReducer = combineReducers({\n    results: session\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './store';\nimport './index.css';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}